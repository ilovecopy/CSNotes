import{_ as e,c as t,a as o,o as n}from"./app-DKkA6jZv.js";const p={};function r(s,a){return n(),t("div",null,a[0]||(a[0]=[o('<h1 id="_6-2-总线事务和定时" tabindex="-1"><a class="header-anchor" href="#_6-2-总线事务和定时"><span>6.2 总线事务和定时</span></a></h1><h2 id="_6-2-1-总线事务" tabindex="-1"><a class="header-anchor" href="#_6-2-1-总线事务"><span>6.2.1 总线事务</span></a></h2><p>从请求总线到完成总线使用的操作序列称为总线事务。</p><h2 id="_6-2-2-同步定时方式" tabindex="-1"><a class="header-anchor" href="#_6-2-2-同步定时方式"><span>6.2.2 同步定时方式</span></a></h2><h2 id="_6-2-3-异步定时方式" tabindex="-1"><a class="header-anchor" href="#_6-2-3-异步定时方式"><span>6.2.3 异步定时方式</span></a></h2><p>（1）不互锁 主设备发出“请求”信号后，不必等到接到从设备的“回答”信号。</p><p>（2）半互锁</p><p>主设备发出“请求”信号后，必须等到接到从设备的“回答”信号，才能撤销“请求”信号。</p><p>（3）全互锁</p><p>主设备发出“请求”信号后，必须等到接到从设备的“回答”信号，才能撤销“请求”信号。</p><p>从设备发出“回答”信号后，必须获知主设备“请求”信号已撤销后，再撤销其“回答”信号。</p>',11)]))}const i=e(p,[["render",r]]),h=JSON.parse('{"path":"/computerOrganization/062.html","title":"6.2 总线事务和定时","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1698592164000,"contributors":[{"name":"ilovecopy","username":"ilovecopy","email":"1205611509@qq.com","commits":1,"url":"https://github.com/ilovecopy"}],"changelog":[{"hash":"2be1877336d36add6192906de44e87ab5b1df4ec","time":1698592164000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"}]},"filePathRelative":"computerOrganization/062.md"}');export{i as comp,h as data};
