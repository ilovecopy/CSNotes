import{_ as t,c as e,a as h,o as d}from"./app-DKkA6jZv.js";const r={};function s(n,a){return d(),e("div",null,a[0]||(a[0]=[h('<h1 id="_5-4-树、森林" tabindex="-1"><a class="header-anchor" href="#_5-4-树、森林"><span>5.4 树、森林</span></a></h1><h2 id="_5-4-1-树的存储结构" tabindex="-1"><a class="header-anchor" href="#_5-4-1-树的存储结构"><span>5.4.1 树的存储结构</span></a></h2><h3 id="_1-双亲表示法" tabindex="-1"><a class="header-anchor" href="#_1-双亲表示法"><span>1.双亲表示法</span></a></h3><p>用数组表示结点和其父结点。</p><h3 id="_2-孩子表示法" tabindex="-1"><a class="header-anchor" href="#_2-孩子表示法"><span>2.孩子表示法</span></a></h3><p>顺序（父结点）+ 链式（孩子结点）</p><h3 id="_3-孩子兄弟表示法" tabindex="-1"><a class="header-anchor" href="#_3-孩子兄弟表示法"><span>3.孩子兄弟表示法</span></a></h3><p>链式（孩子 + 兄弟）</p><h2 id="_5-4-2-树、森林与二叉树的转换" tabindex="-1"><a class="header-anchor" href="#_5-4-2-树、森林与二叉树的转换"><span>5.4.2 树、森林与二叉树的转换</span></a></h2><h3 id="树——-二叉树" tabindex="-1"><a class="header-anchor" href="#树——-二叉树"><span>树——&gt;二叉树</span></a></h3><p>左孩子右兄弟</p><h3 id="森林——-二叉树" tabindex="-1"><a class="header-anchor" href="#森林——-二叉树"><span>森林——&gt;二叉树</span></a></h3><p>先分别变成二叉树，再连接起来</p><h2 id="_5-4-3-树和森林的遍历" tabindex="-1"><a class="header-anchor" href="#_5-4-3-树和森林的遍历"><span>5.4.3 树和森林的遍历</span></a></h2><table><thead><tr><th>树</th><th>森林</th><th>二叉树</th></tr></thead><tbody><tr><td>先根遍历</td><td>先序遍历</td><td>先序遍历</td></tr><tr><td>后根遍历</td><td>中序遍历</td><td>中序遍历</td></tr></tbody></table>',15)]))}const o=t(r,[["render",s]]),p=JSON.parse('{"path":"/datastructure/054.html","title":"5.4 树、森林","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1698592164000,"contributors":[{"name":"ilovecopy","username":"ilovecopy","email":"1205611509@qq.com","commits":1,"url":"https://github.com/ilovecopy"}],"changelog":[{"hash":"2be1877336d36add6192906de44e87ab5b1df4ec","time":1698592164000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"}]},"filePathRelative":"datastructure/054.md"}');export{o as comp,p as data};
