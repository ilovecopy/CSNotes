import{_ as e,c as t,a as n,o as s}from"./app-DKkA6jZv.js";const o={};function p(r,a){return s(),t("div",null,a[0]||(a[0]=[n('<h1 id="_6-3-图的遍历" tabindex="-1"><a class="header-anchor" href="#_6-3-图的遍历"><span>6.3 图的遍历</span></a></h1><h2 id="_6-3-1-广度优先遍历" tabindex="-1"><a class="header-anchor" href="#_6-3-1-广度优先遍历"><span>6.3.1 广度优先遍历</span></a></h2><p>$n$ 个顶点，$e$ 条边。</p><p>邻接矩阵：时间复杂度 $O(n^{2})$</p><p>邻接表：时间复杂度 $O(n+e)$</p><p>空间复杂度 $O(n)$</p><h3 id="leetcode102-二叉树的层次遍历" tabindex="-1"><a class="header-anchor" href="#leetcode102-二叉树的层次遍历"><span>LeetCode102 二叉树的层次遍历</span></a></h3><h3 id="广度优先生成树" tabindex="-1"><a class="header-anchor" href="#广度优先生成树"><span>广度优先生成树</span></a></h3><p>给定图的邻接矩阵，广度优先生成树是唯一的。邻接表存储不唯一，广度优先生成树不唯一。</p><h2 id="_6-3-2-深度优先遍历" tabindex="-1"><a class="header-anchor" href="#_6-3-2-深度优先遍历"><span>6.3.2 深度优先遍历</span></a></h2><p>邻接矩阵：时间复杂度 $O(n^{2})$</p><p>邻接表：时间复杂度 $O(n+e)$</p><p>空间复杂度 $O(n)$</p>',13)]))}const d=e(o,[["render",p]]),h=JSON.parse('{"path":"/datastructure/063.html","title":"6.3 图的遍历","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1698592164000,"contributors":[{"name":"ilovecopy","username":"ilovecopy","email":"1205611509@qq.com","commits":1,"url":"https://github.com/ilovecopy"}],"changelog":[{"hash":"2be1877336d36add6192906de44e87ab5b1df4ec","time":1698592164000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"}]},"filePathRelative":"datastructure/063.md"}');export{d as comp,h as data};
