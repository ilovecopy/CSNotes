import{_ as e,c as i,a as s,o}from"./app-DKkA6jZv.js";const n={};function p(h,a){return o(),i("div",null,a[0]||(a[0]=[s('<h1 id="_5-1-i-o-管理概述" tabindex="-1"><a class="header-anchor" href="#_5-1-i-o-管理概述"><span>5.1 I/O 管理概述</span></a></h1><h3 id="_5-1-1-i-o-设备" tabindex="-1"><a class="header-anchor" href="#_5-1-1-i-o-设备"><span>5.1.1 I/O 设备</span></a></h3><h4 id="_1-设备的分类" tabindex="-1"><a class="header-anchor" href="#_1-设备的分类"><span>1.设备的分类</span></a></h4><p>按数据交换的单位分类</p><p>（1）块设备</p><p>（2）字符设备</p><h4 id="_2-i-o-接口-设备控制器" tabindex="-1"><a class="header-anchor" href="#_2-i-o-接口-设备控制器"><span>2.I/O 接口（设备控制器）</span></a></h4><p>位于 CPU 与设备之间</p><h4 id="_3-i-o-端口" tabindex="-1"><a class="header-anchor" href="#_3-i-o-端口"><span>3.I/O 端口</span></a></h4><p>设备控制器中可以被 CPU 直接访问的寄存器。</p><p>I/O 端口是指接口中用于暂存信息的寄存器。由于主机和 I/O 设备的工作方式和工作速度有很大差异，I/O 端口就应运而生。</p><ul><li>数据寄存器</li><li>控制寄存器</li><li>状态寄存器</li></ul><p>给寄存器编址：</p><ul><li>独立编址</li><li>统一编址</li></ul><h3 id="_5-1-2-i-o-控制方式" tabindex="-1"><a class="header-anchor" href="#_5-1-2-i-o-控制方式"><span>5.1.2 I/O 控制方式</span></a></h3><p>外围设备和内存之间的通信方式。</p><h4 id="_1-程序直接控制方式" tabindex="-1"><a class="header-anchor" href="#_1-程序直接控制方式"><span>1.程序直接控制方式</span></a></h4><p>CPU 不断检查 I/O 控制器的状态。</p><figure><img src="https://csnotes.oss-cn-beijing.aliyuncs.com/photos/直接控制方式.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-中断驱动方式" tabindex="-1"><a class="header-anchor" href="#_2-中断驱动方式"><span>2.中断驱动方式</span></a></h4><p>I/O 主动打断 CPU 并请求服务。</p><h4 id="_3-dma-方式-i-o-与内存之间直接进行数据交换" tabindex="-1"><a class="header-anchor" href="#_3-dma-方式-i-o-与内存之间直接进行数据交换"><span>3.DMA 方式（I/O 与内存之间直接进行数据交换）</span></a></h4><p>DMA 方式主要用于块设备，磁盘时典型的块设备。</p><p>基本单位是数据块。</p><p>系统将数据从磁盘读到内存的过程：初始化 DMA 控制器并启动磁盘，从磁盘传输一块数据到内存缓冲区，DMA 控制器发出中断请求，执行“DMA 结束”中断服务程序</p><figure><img src="https://csnotes.oss-cn-beijing.aliyuncs.com/photos/DMA.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_5-1-3-i-o-软件层次结构" tabindex="-1"><a class="header-anchor" href="#_5-1-3-i-o-软件层次结构"><span>5.1.3 I/O 软件层次结构</span></a></h3><figure><img src="https://csnotes.oss-cn-beijing.aliyuncs.com/photos/IO软件层次结构.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>(2) 设备独立性软件</p><p>将物理设备名转化为逻辑设备名。</p><p>（3）设备驱动程序</p><p>计算数据所在磁盘的柱面号、磁头号、扇区号。</p><h3 id="_5-1-4-应用程序-i-o-接口" tabindex="-1"><a class="header-anchor" href="#_5-1-4-应用程序-i-o-接口"><span>5.1.4 应用程序 I/O 接口</span></a></h3><p>（1）字符设备接口</p>',34)]))}const t=e(n,[["render",p]]),d=JSON.parse('{"path":"/os/051.html","title":"5.1 I/O 管理概述","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1720103859000,"contributors":[{"name":"ilovecopy","username":"ilovecopy","email":"1205611509@qq.com","commits":3,"url":"https://github.com/ilovecopy"}],"changelog":[{"hash":"d5db2459b570e661d3d7d99a79f49d17d97f2ddc","time":1720103859000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"},{"hash":"87edf6c08c4a79890356eb85f53da45fb5c46d12","time":1698675745000,"email":"1205611509@qq.com","author":"ilovecopy","message":"fix format"},{"hash":"2be1877336d36add6192906de44e87ab5b1df4ec","time":1698592164000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"}]},"filePathRelative":"os/051.md"}');export{t as comp,d as data};
