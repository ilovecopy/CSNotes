import{_ as e,c as t,a as d,o as s}from"./app-DKkA6jZv.js";const h={};function o(c,a){return s(),t("div",null,a[0]||(a[0]=[d('<h1 id="_4-3-文件系统" tabindex="-1"><a class="header-anchor" href="#_4-3-文件系统"><span>4.3 文件系统</span></a></h1><h2 id="_4-3-1-文件系统结构" tabindex="-1"><a class="header-anchor" href="#_4-3-1-文件系统结构"><span>4.3.1 文件系统结构</span></a></h2><p>绝大多数操作系统为改善磁盘访问时间，以簇为单位进行空间分配。</p><p>操作系统启动时有一块 ROM，提供内存中初始输入输出。称为 BIOS</p><h2 id="_4-3-2-文件系统布局" tabindex="-1"><a class="header-anchor" href="#_4-3-2-文件系统布局"><span>4.3.2 文件系统布局</span></a></h2><figure><img src="https://csnotes.oss-cn-beijing.aliyuncs.com/photos/文件系统布局.drawio.svg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>（1）主引导记录（MBR），位于磁盘的 0 号扇区，用来引导计算机，MBR 后面是分区表，该表给出每个分区的起始地址和结束地址。表中的第一个分区被标记为活动分区。当计算机启动时，BIOS 读入并执行 MBR。MBR 做的第一件事是确定活动分区，读入它的第一块，即引导块。</p><h2 id="_4-3-3-外存空闲空间管理" tabindex="-1"><a class="header-anchor" href="#_4-3-3-外存空闲空间管理"><span>4.3.3 外存空闲空间管理</span></a></h2><h3 id="_1-空闲表法" tabindex="-1"><a class="header-anchor" href="#_1-空闲表法"><span>1.空闲表法</span></a></h3><p>连续分配</p><p>空闲盘块表</p><table><thead><tr><th>第一个空闲盘块号</th><th>空闲盘块数</th></tr></thead><tbody><tr><td>2</td><td>4</td></tr><tr><td>9</td><td>3</td></tr></tbody></table><h3 id="_2-空闲链表法" tabindex="-1"><a class="header-anchor" href="#_2-空闲链表法"><span>2.空闲链表法</span></a></h3><p>（1）空闲盘块链</p><p>（2）空闲盘区链</p><h3 id="_3-位示图法" tabindex="-1"><a class="header-anchor" href="#_3-位示图法"><span>3.位示图法</span></a></h3><p>（字号，位号）推出盘块号。</p><p>用二进制的一位来表示盘块是否空闲。</p><h3 id="_4-成组链接法" tabindex="-1"><a class="header-anchor" href="#_4-成组链接法"><span>4.成组链接法</span></a></h3><p>超级块：第一个成组链块</p><p>成组链块：记录下一组空闲盘块数和空闲块号。</p><h2 id="_4-3-4-虚拟文件系统" tabindex="-1"><a class="header-anchor" href="#_4-3-4-虚拟文件系统"><span>4.3.4 虚拟文件系统</span></a></h2>',22)]))}const i=e(h,[["render",o]]),p=JSON.parse('{"path":"/os/043.html","title":"4.3 文件系统","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1720103859000,"contributors":[{"name":"ilovecopy","username":"ilovecopy","email":"1205611509@qq.com","commits":4,"url":"https://github.com/ilovecopy"}],"changelog":[{"hash":"d5db2459b570e661d3d7d99a79f49d17d97f2ddc","time":1720103859000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"},{"hash":"3c2e10441c021da9848fe807a05852361f936352","time":1706439045000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"},{"hash":"352c8431a131d18c32212ef9604f50ec887dc6f5","time":1706326003000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"},{"hash":"2be1877336d36add6192906de44e87ab5b1df4ec","time":1698592164000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"}]},"filePathRelative":"os/043.md"}');export{i as comp,p as data};
