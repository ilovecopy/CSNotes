import{_ as e,c as t,a as s,o as r}from"./app-DKkA6jZv.js";const o={};function c(n,a){return r(),t("div",null,a[0]||(a[0]=[s('<h1 id="_8-6-外部排序" tabindex="-1"><a class="header-anchor" href="#_8-6-外部排序"><span>8.6 外部排序</span></a></h1><p>外部排序指代排文件较大，内存一次性放不下，需存放在外部介质当中，外部排序通常采用归并排序。</p><p>减少归并中外存读写次数所采取的方法：增大归并路数、减少归并段个数。</p><h2 id="_8-6-3-多路平衡归并与败者树-增大归并路数" tabindex="-1"><a class="header-anchor" href="#_8-6-3-多路平衡归并与败者树-增大归并路数"><span>8.6.3 多路平衡归并与败者树（增大归并路数）</span></a></h2><p>败者树：胜者上升，记录败者</p><h2 id="_8-6-4-置换-选择排序-生成初始归并段" tabindex="-1"><a class="header-anchor" href="#_8-6-4-置换-选择排序-生成初始归并段"><span>8.6.4 置换 - 选择排序（生成初始归并段）</span></a></h2><p>生成更长的归并段，减少归并段个数</p><h2 id="_8-6-5-最佳归并树" tabindex="-1"><a class="header-anchor" href="#_8-6-5-最佳归并树"><span>8.6.5 最佳归并树</span></a></h2>',8)]))}const d=e(o,[["render",c]]),p=JSON.parse('{"path":"/datastructure/086.html","title":"8.6 外部排序","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1698592164000,"contributors":[{"name":"ilovecopy","username":"ilovecopy","email":"1205611509@qq.com","commits":1,"url":"https://github.com/ilovecopy"}],"changelog":[{"hash":"2be1877336d36add6192906de44e87ab5b1df4ec","time":1698592164000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"}]},"filePathRelative":"datastructure/086.md"}');export{d as comp,p as data};
