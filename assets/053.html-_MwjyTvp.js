import{_ as a,c as o,a as c,o as l}from"./app-DKkA6jZv.js";const t={};function s(d,e){return l(),o("div",null,e[0]||(e[0]=[c('<h1 id="_5-3-什么是-mysql-最左匹配原则" tabindex="-1"><a class="header-anchor" href="#_5-3-什么是-mysql-最左匹配原则"><span>5.3 什么是 MySQL 最左匹配原则？</span></a></h1><h2 id="为什么使用联合索引" tabindex="-1"><a class="header-anchor" href="#为什么使用联合索引"><span>为什么使用联合索引？</span></a></h2><ul><li>减少开销。创建一个联合索引 (col1,col2,col3)，实际相当于建了 (col1)，(col1,col2)</li></ul><p>，(col1,col2,col3) 三个索引。每多一个索引，都会增加写操作的开销和磁盘空间的开销。对于大量数据的表，使用联合索引会大大减少开销。</p><ul><li>覆盖索引。对联合索引 (col1,col2,col3),如果有如下 SQL：select col1,col2,col3 from test where col1=1 and col2=2;那么 MySQL 可以直接通过遍历</li><li>效率高。索引列越多，通过索引筛选出的数据越少。有 1000w 条数据的表。有如下的 SQL：select * from table where col1=1 and col2=2 and col3=3;，假设每个条件可以筛选出 10% 的数据，如果只有单值索引，那么通过索引筛选出$1000w<em>10%=100w$条数据，再回表从 100w 条数据中找到符合 col2=2 and col3=3 的数据，然后再排序，分页；如果是联合索引，通过索引筛选出 $1000w</em>10%*10%*10%=1w$</li></ul>',5)]))}const m=a(t,[["render",s]]),r=JSON.parse('{"path":"/database/053.html","title":"5.3 什么是 MySQL 最左匹配原则？","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1715524248000,"contributors":[{"name":"ilovecopy","username":"ilovecopy","email":"1205611509@qq.com","commits":3,"url":"https://github.com/ilovecopy"}],"changelog":[{"hash":"0951367e0d815b803f7dcc0a07d29f463df6fbbf","time":1715524248000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"},{"hash":"26fca5d87b4817d65ef662742dc693b8c515bbcf","time":1715522683000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"},{"hash":"2be1877336d36add6192906de44e87ab5b1df4ec","time":1698592164000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"}]},"filePathRelative":"database/053.md"}');export{m as comp,r as data};
