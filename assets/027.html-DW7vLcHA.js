import{_ as a,c as s,a as p,o as t}from"./app-DKkA6jZv.js";const e={};function o(c,n){return t(),s("div",null,n[0]||(n[0]=[p(`<h1 id="_027-移除元素" tabindex="-1"><a class="header-anchor" href="#_027-移除元素"><span>027 移除元素</span></a></h1><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">removeElement</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">                j<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">return</span> j<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div>`,2)]))}const i=a(e,[["render",o]]),u=JSON.parse('{"path":"/leetcode/027.html","title":"027 移除元素","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1711380227000,"contributors":[{"name":"ilovecopy","username":"ilovecopy","email":"1205611509@qq.com","commits":2,"url":"https://github.com/ilovecopy"}],"changelog":[{"hash":"26b9f7bac80028dc8b28c232d52589f91d3de56e","time":1711380227000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"},{"hash":"7917175019024810a1820421dbd6fbca73f4a6a6","time":1711380006000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"}]},"filePathRelative":"leetcode/027.md"}');export{i as comp,u as data};
