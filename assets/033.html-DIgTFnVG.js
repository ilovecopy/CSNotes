import{_ as e,c as t,a as n,o as s}from"./app-DKkA6jZv.js";const r={};function c(h,a){return s(),t("div",null,a[0]||(a[0]=[n('<h1 id="_3-3-栈和队列的应用" tabindex="-1"><a class="header-anchor" href="#_3-3-栈和队列的应用"><span>3.3 栈和队列的应用</span></a></h1><h2 id="_3-3-1-栈在括号匹配中的应用" tabindex="-1"><a class="header-anchor" href="#_3-3-1-栈在括号匹配中的应用"><span>3.3.1 栈在括号匹配中的应用</span></a></h2><h2 id="_3-3-2-栈在表达式求值中的应用" tabindex="-1"><a class="header-anchor" href="#_3-3-2-栈在表达式求值中的应用"><span>3.3.2 栈在表达式求值中的应用</span></a></h2><p>中缀表达式转后缀表达式：遇见优先级大的符号就出栈。左括号要遇见右括号才出栈。</p><h2 id="_3-3-3-栈在递归中的应用" tabindex="-1"><a class="header-anchor" href="#_3-3-3-栈在递归中的应用"><span>3.3.3 栈在递归中的应用</span></a></h2><h2 id="_3-3-4-队列在层次遍历中的应用" tabindex="-1"><a class="header-anchor" href="#_3-3-4-队列在层次遍历中的应用"><span>3.3.4 队列在层次遍历中的应用</span></a></h2><h2 id="_3-3-5-队列在计算机系统中的应用" tabindex="-1"><a class="header-anchor" href="#_3-3-5-队列在计算机系统中的应用"><span>3.3.5 队列在计算机系统中的应用</span></a></h2><p>n 个不同的元素进栈，出栈序列的个数为$\\frac{\\complement^{n}_{2n} }{n+1}$</p>',8)]))}const d=e(r,[["render",c]]),i=JSON.parse('{"path":"/datastructure/033.html","title":"3.3 栈和队列的应用","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1698592164000,"contributors":[{"name":"ilovecopy","username":"ilovecopy","email":"1205611509@qq.com","commits":1,"url":"https://github.com/ilovecopy"}],"changelog":[{"hash":"2be1877336d36add6192906de44e87ab5b1df4ec","time":1698592164000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"}]},"filePathRelative":"datastructure/033.md"}');export{d as comp,i as data};
