import{_ as e,c as a,a as o,o as n}from"./app-DKkA6jZv.js";const d={};function r(i,t){return n(),a("div",null,t[0]||(t[0]=[o('<h1 id="_1-3-注解" tabindex="-1"><a class="header-anchor" href="#_1-3-注解"><span>1.3 注解</span></a></h1><p>注解是代码中的特殊标记。</p><h2 id="使用注解定义-bean" tabindex="-1"><a class="header-anchor" href="#使用注解定义-bean"><span>使用注解定义 Bean</span></a></h2><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@Component</td><td>该注解用于描述 Spring 中的 Bean，它是一个泛化的概念，仅仅表示容器中的一个组件（Bean），并且可以作用在应用的任何层次，例如 Service 层、Dao 层等。使用时只需将该注解标注在相应的类上即可。</td></tr><tr><td>@Repository</td><td>该租借用于将数据访问层（Dao 层）的类标识为 Spring 中的 Bean，其功能与@Component 相同。</td></tr><tr><td>@Service</td><td>该注解通常作用在业务层（Service 层），用于将业务层的类标识为 Spring 中的 Bean，其功能与@Component 相同。</td></tr><tr><td>@Controller</td><td>该注解通常作用在控制层（如 SpringMVC 的 Controller），用于将控制层的类标识为 Spring 中的 Bean，其功能与@Component 相同。</td></tr></tbody></table><p>@Data=@Getter+@Setter+@ToString+@EqualsAndHashCode</p><figure><img src="https://csnotes.oss-cn-beijing.aliyuncs.com/photos/image-20240401235819947.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',6)]))}const c=e(d,[["render",r]]),m=JSON.parse('{"path":"/ssm/003.html","title":"1.3 注解","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1720103859000,"contributors":[{"name":"ilovecopy","username":"ilovecopy","email":"1205611509@qq.com","commits":3,"url":"https://github.com/ilovecopy"}],"changelog":[{"hash":"d5db2459b570e661d3d7d99a79f49d17d97f2ddc","time":1720103859000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"},{"hash":"52586e2e01d47f8785c54f0bc3fa86201c63e5d8","time":1719184104000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"},{"hash":"ac6758d3c3562f61d3fa4fdf4fd4660821a5aa85","time":1718640010000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"}]},"filePathRelative":"ssm/003.md"}');export{c as comp,m as data};
