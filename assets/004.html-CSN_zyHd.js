import{_ as e,c as s,a as h,o as n}from"./app-DKkA6jZv.js";const p={};function d(c,a){return n(),s("div",null,a[0]||(a[0]=[h('<h1 id="_1-4-aop" tabindex="-1"><a class="header-anchor" href="#_1-4-aop"><span>1.4 AOP</span></a></h1><p>Aspect Oriented Programming 面向切面变成，就是面向特定方法编程。</p><h2 id="通知" tabindex="-1"><a class="header-anchor" href="#通知"><span>通知</span></a></h2><p>前置通知：在被代理的目标方法前执行</p><p>返回通知：在被代理的目标方法成功结束后执行（寿终正寝）</p><p>异常通知：在被代理的目标方法异常结束后执行（死于非命）</p><p>后置通知：在被代理的目标方法最终结束后执行（盖棺定论）</p><h2 id="切面" tabindex="-1"><a class="header-anchor" href="#切面"><span>切面</span></a></h2><p>封装通知方法的类</p><h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标"><span>目标</span></a></h2><h2 id="代理" tabindex="-1"><a class="header-anchor" href="#代理"><span>代理</span></a></h2><h2 id="连接点" tabindex="-1"><a class="header-anchor" href="#连接点"><span>连接点</span></a></h2><p>就是 Spring 允许使用通知的地方</p><h2 id="切入点" tabindex="-1"><a class="header-anchor" href="#切入点"><span>切入点</span></a></h2><h2 id="切面优先级" tabindex="-1"><a class="header-anchor" href="#切面优先级"><span>切面优先级</span></a></h2><p>外层高于内层。</p>',16)]))}const r=e(p,[["render",d]]),t=JSON.parse('{"path":"/ssm/004.html","title":"1.4 AOP","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1719184104000,"contributors":[{"name":"ilovecopy","username":"ilovecopy","email":"1205611509@qq.com","commits":3,"url":"https://github.com/ilovecopy"}],"changelog":[{"hash":"52586e2e01d47f8785c54f0bc3fa86201c63e5d8","time":1719184104000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"},{"hash":"6dfb5c6bd039f77a3ab0384c92d5a8eddf2e5b8a","time":1719053032000,"email":"1205611509@qq.com","author":"ilovecopy","message":"Update 004.md"},{"hash":"e840338427a6d1d2ad208ae6dc0791ff8d6e5a76","time":1719052929000,"email":"1205611509@qq.com","author":"ilovecopy","message":"add"}]},"filePathRelative":"ssm/004.md"}');export{r as comp,t as data};
